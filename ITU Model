# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.
import math

def pathLoss (n, percent):
    # freq is a float number in MHz
    # n is the floor number, 1<= n <=3
    # percent is the device received signal strength
    # s_power is the source power  in dbm
    # d_power is received device power in dbm
    # dis is the distance in meters
    freq = 5200.0 # in MHz
    s_power = -30
    d_power = (percent/2) - 100
    loss = s_power - d_power
    p_loss = p_loss_coef(freq/(10**3))
    f_loss = floor_loss_coef(freq/(10**3), n)

    loss += 28
    loss -= f_loss
    loss -= 20 * math.log10(freq)
    dis = 10**(loss/p_loss)

    return dis

def p_loss_coef (freq):
    # freq is a float number
    # return an integer
    coef = 0
    if (freq == 0.9):
        coef = 33
    elif (freq>1.2 & freq<1.3):
        coef = 32
    elif (freq>1.8 & freq<2.0):
        coef = 30
    elif (freq == 4.0):
        coef = 28
    elif (freq == 5.2):
        coef = 31
    elif (freq == 5.8):
        coef = 24
    elif (freq == 6.0):
        coef = 22
    else:
        print ("error: power loss coefficient unknown")

    return coef

def floor_loss_coef (freq, n):
    # freq is a float number
    # n is an integer, 1<= n <=3
    coef = 0
    if (freq == 0.9):
        if (n==1):
            coef = 9
        elif (n==2):
            coef = 19
        elif (n==3):
            coef = 24
    elif (freq>1.8 & freq<2.0):
        coef = 15 + 4*(n-1)
    elif (freq == 5.2 & n==1):
        coef = 16
    elif (freq == 5.8):
        if (n==1):
            coef = 22
        elif (n==2):
            coef = 28
    else:
        print("error: floor loss coefficient unknown")

    return coef
